-- Copyright (C) 1991-2007 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--program_counter[0] is program_counter[0] at LCFF_X29_Y35_N3
program_counter[0] = DFFEAS(A1L164, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[1] is program_counter[1] at LCFF_X29_Y35_N23
program_counter[1] = DFFEAS(A1L163, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[2] is program_counter[2] at LCFF_X29_Y35_N11
program_counter[2] = DFFEAS(A1L162, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[3] is program_counter[3] at LCFF_X29_Y35_N25
program_counter[3] = DFFEAS(A1L161, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[4] is program_counter[4] at LCFF_X28_Y35_N23
program_counter[4] = DFFEAS(A1L160, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[5] is program_counter[5] at LCFF_X29_Y35_N19
program_counter[5] = DFFEAS(A1L159, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[6] is program_counter[6] at LCFF_X29_Y35_N15
program_counter[6] = DFFEAS(A1L158, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--program_counter[7] is program_counter[7] at LCFF_X29_Y35_N31
program_counter[7] = DFFEAS(A1L157, GLOBAL(A1L50),  ,  , A1L103,  ,  ,  ,  );


--register_AC[0] is register_AC[0] at LCFF_X31_Y31_N5
register_AC[0] = DFFEAS(A1L180, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[1] is register_AC[1] at LCFF_X31_Y31_N17
register_AC[1] = DFFEAS(A1L179, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[2] is register_AC[2] at LCFF_X31_Y31_N19
register_AC[2] = DFFEAS(A1L178, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[3] is register_AC[3] at LCFF_X31_Y31_N25
register_AC[3] = DFFEAS(A1L177, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[4] is register_AC[4] at LCFF_X31_Y31_N11
register_AC[4] = DFFEAS(A1L176, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[5] is register_AC[5] at LCFF_X31_Y31_N15
register_AC[5] = DFFEAS(A1L175, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[6] is register_AC[6] at LCFF_X29_Y31_N27
register_AC[6] = DFFEAS(A1L174, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[7] is register_AC[7] at LCFF_X29_Y31_N21
register_AC[7] = DFFEAS(A1L173, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[8] is register_AC[8] at LCFF_X29_Y31_N9
register_AC[8] = DFFEAS(A1L172, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[9] is register_AC[9] at LCFF_X29_Y31_N31
register_AC[9] = DFFEAS(A1L171, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[10] is register_AC[10] at LCFF_X29_Y31_N5
register_AC[10] = DFFEAS(A1L170, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[11] is register_AC[11] at LCFF_X29_Y31_N13
register_AC[11] = DFFEAS(A1L169, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[12] is register_AC[12] at LCFF_X29_Y31_N25
register_AC[12] = DFFEAS(A1L168, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[13] is register_AC[13] at LCFF_X29_Y31_N15
register_AC[13] = DFFEAS(A1L167, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[14] is register_AC[14] at LCFF_X29_Y31_N29
register_AC[14] = DFFEAS(A1L166, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--register_AC[15] is register_AC[15] at LCFF_X31_Y31_N21
register_AC[15] = DFFEAS(A1L165, GLOBAL(A1L50),  ,  , A1L122,  ,  ,  ,  );


--C1_q_a[0] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[0] at M4K_X26_Y31
--RAM Block Operation Mode: Single Port
--Port A Depth: 256, Port A Width: 16
--Port A Logical Depth: 256, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[0] = C1_q_a[0]_PORT_A_data_out[0];

--C1_q_a[8] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[8] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[8] = C1_q_a[0]_PORT_A_data_out[8];

--C1_q_a[7] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[7] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[7] = C1_q_a[0]_PORT_A_data_out[7];

--C1_q_a[6] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[6] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[6] = C1_q_a[0]_PORT_A_data_out[6];

--C1_q_a[5] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[5] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[5] = C1_q_a[0]_PORT_A_data_out[5];

--C1_q_a[4] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[4] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[4] = C1_q_a[0]_PORT_A_data_out[4];

--C1_q_a[3] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[3] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[3] = C1_q_a[0]_PORT_A_data_out[3];

--C1_q_a[2] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[2] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[2] = C1_q_a[0]_PORT_A_data_out[2];

--C1_q_a[1] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[1] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[1] = C1_q_a[0]_PORT_A_data_out[1];

--C1_q_a[15] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[15] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[15] = C1_q_a[0]_PORT_A_data_out[15];

--C1_q_a[14] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[14] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[14] = C1_q_a[0]_PORT_A_data_out[14];

--C1_q_a[13] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[13] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[13] = C1_q_a[0]_PORT_A_data_out[13];

--C1_q_a[12] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[12] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[12] = C1_q_a[0]_PORT_A_data_out[12];

--C1_q_a[11] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[11] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[11] = C1_q_a[0]_PORT_A_data_out[11];

--C1_q_a[10] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[10] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[10] = C1_q_a[0]_PORT_A_data_out[10];

--C1_q_a[9] is altsyncram:memory|altsyncram_91h3:auto_generated|q_a[9] at M4K_X26_Y31
C1_q_a[0]_PORT_A_data_in = BUS(register_AC[0], register_AC[1], register_AC[2], register_AC[3], register_AC[4], register_AC[5], register_AC[6], register_AC[7], register_AC[8], register_AC[9], register_AC[10], register_AC[11], register_AC[12], register_AC[13], register_AC[14], register_AC[15]);
C1_q_a[0]_PORT_A_data_in_reg = DFFE(C1_q_a[0]_PORT_A_data_in, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_address = BUS(A1L189, A1L188, A1L187, A1L186, A1L185, A1L184, A1L183, A1L182);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_PORT_A_write_enable = memory_write;
C1_q_a[0]_PORT_A_write_enable_reg = DFFE(C1_q_a[0]_PORT_A_write_enable, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(A1L50);
C1_q_a[0]_PORT_A_data_out = MEMORY(C1_q_a[0]_PORT_A_data_in_reg, , C1_q_a[0]_PORT_A_address_reg, , C1_q_a[0]_PORT_A_write_enable_reg, , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[9] = C1_q_a[0]_PORT_A_data_out[9];


--instruction_register[0] is instruction_register[0] at LCFF_X28_Y35_N25
instruction_register[0] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[0],  ,  , VCC);


--state.execute_jump is state.execute_jump at LCFF_X28_Y31_N3
state.execute_jump = DFFEAS(A1L203, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--state.decode is state.decode at LCFF_X31_Y31_N9
state.decode = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  , state.fetch,  ,  , VCC);


--state.execute_store is state.execute_store at LCFF_X28_Y31_N13
state.execute_store = DFFEAS(A1L204, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--state.execute_store2 is state.execute_store2 at LCFF_X31_Y31_N7
state.execute_store2 = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  , state.execute_store,  ,  , VCC);


--WideOr7 is WideOr7 at LCCOMB_X31_Y31_N8
WideOr7 = state.execute_store2 # state.execute_jump # state.decode # state.execute_store;


--state.execute_add is state.execute_add at LCFF_X28_Y31_N15
state.execute_add = DFFEAS(A1L205, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--state.execute_load is state.execute_load at LCFF_X28_Y31_N29
state.execute_load = DFFEAS(A1L206, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--state.fetch is state.fetch at LCFF_X31_Y31_N27
state.fetch = DFFEAS(A1L181, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--state.execute_store3 is state.execute_store3 at LCFF_X31_Y31_N29
state.execute_store3 = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  , state.execute_store2,  ,  , VCC);


--A1L207 is WideOr6~12 at LCCOMB_X31_Y31_N28
A1L207 = state.execute_add # state.execute_load # state.execute_store3 # state.fetch;


--A1L189 is Selector33~78 at LCCOMB_X28_Y35_N24
A1L189 = WideOr7 & (instruction_register[0] # A1L207 & program_counter[0]) # !WideOr7 & A1L207 & (program_counter[0]);


--instruction_register[1] is instruction_register[1] at LCFF_X28_Y35_N27
instruction_register[1] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[1],  ,  , VCC);


--A1L188 is Selector32~78 at LCCOMB_X28_Y35_N26
A1L188 = WideOr7 & (instruction_register[1] # A1L207 & program_counter[1]) # !WideOr7 & A1L207 & (program_counter[1]);


--instruction_register[2] is instruction_register[2] at LCFF_X28_Y35_N21
instruction_register[2] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[2],  ,  , VCC);


--A1L187 is Selector31~78 at LCCOMB_X28_Y35_N20
A1L187 = WideOr7 & (instruction_register[2] # A1L207 & program_counter[2]) # !WideOr7 & A1L207 & (program_counter[2]);


--instruction_register[3] is instruction_register[3] at LCFF_X28_Y35_N29
instruction_register[3] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[3],  ,  , VCC);


--A1L186 is Selector30~78 at LCCOMB_X28_Y35_N28
A1L186 = WideOr7 & (instruction_register[3] # A1L207 & program_counter[3]) # !WideOr7 & A1L207 & (program_counter[3]);


--instruction_register[4] is instruction_register[4] at LCFF_X28_Y35_N31
instruction_register[4] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[4],  ,  , VCC);


--A1L185 is Selector29~78 at LCCOMB_X28_Y35_N30
A1L185 = WideOr7 & (instruction_register[4] # A1L207 & program_counter[4]) # !WideOr7 & A1L207 & (program_counter[4]);


--instruction_register[5] is instruction_register[5] at LCFF_X28_Y35_N17
instruction_register[5] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[5],  ,  , VCC);


--A1L184 is Selector28~78 at LCCOMB_X28_Y35_N16
A1L184 = WideOr7 & (instruction_register[5] # A1L207 & program_counter[5]) # !WideOr7 & A1L207 & (program_counter[5]);


--instruction_register[6] is instruction_register[6] at LCFF_X29_Y31_N19
instruction_register[6] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[6],  ,  , VCC);


--A1L183 is Selector27~78 at LCCOMB_X29_Y31_N18
A1L183 = WideOr7 & (instruction_register[6] # A1L207 & program_counter[6]) # !WideOr7 & A1L207 & (program_counter[6]);


--instruction_register[7] is instruction_register[7] at LCFF_X28_Y35_N19
instruction_register[7] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[7],  ,  , VCC);


--A1L182 is Selector26~78 at LCCOMB_X28_Y35_N18
A1L182 = WideOr7 & (instruction_register[7] # A1L207 & program_counter[7]) # !WideOr7 & A1L207 & (program_counter[7]);


--A1L1 is Add0~164 at LCCOMB_X28_Y35_N0
A1L1 = program_counter[0] $ VCC;

--A1L2 is Add0~165 at LCCOMB_X28_Y35_N0
A1L2 = CARRY(program_counter[0]);


--A1L164 is Selector7~22 at LCCOMB_X29_Y35_N2
A1L164 = state.execute_jump & (instruction_register[0]) # !state.execute_jump & A1L1 & state.fetch;


--state.reset_pc is state.reset_pc at LCFF_X32_Y31_N31
state.reset_pc = DFFEAS(A1L200, GLOBAL(A1L50), !GLOBAL(A1L156),  ,  ,  ,  ,  ,  );


--A1L103 is program_counter[0]~54 at LCCOMB_X31_Y31_N22
A1L103 = !reset & (state.fetch # state.execute_jump # !state.reset_pc);


--A1L3 is Add0~166 at LCCOMB_X28_Y35_N2
A1L3 = program_counter[1] & !A1L2 # !program_counter[1] & (A1L2 # GND);

--A1L4 is Add0~167 at LCCOMB_X28_Y35_N2
A1L4 = CARRY(!A1L2 # !program_counter[1]);


--A1L163 is Selector6~22 at LCCOMB_X29_Y35_N22
A1L163 = state.execute_jump & (instruction_register[1]) # !state.execute_jump & A1L3 & state.fetch;


--A1L5 is Add0~168 at LCCOMB_X28_Y35_N4
A1L5 = program_counter[2] & (A1L4 $ GND) # !program_counter[2] & !A1L4 & VCC;

--A1L6 is Add0~169 at LCCOMB_X28_Y35_N4
A1L6 = CARRY(program_counter[2] & !A1L4);


--A1L162 is Selector5~22 at LCCOMB_X29_Y35_N10
A1L162 = state.execute_jump & instruction_register[2] # !state.execute_jump & (A1L5 & state.fetch);


--A1L7 is Add0~170 at LCCOMB_X28_Y35_N6
A1L7 = program_counter[3] & !A1L6 # !program_counter[3] & (A1L6 # GND);

--A1L8 is Add0~171 at LCCOMB_X28_Y35_N6
A1L8 = CARRY(!A1L6 # !program_counter[3]);


--A1L161 is Selector4~22 at LCCOMB_X29_Y35_N24
A1L161 = state.execute_jump & (instruction_register[3]) # !state.execute_jump & state.fetch & A1L7;


--A1L9 is Add0~172 at LCCOMB_X28_Y35_N8
A1L9 = program_counter[4] & (A1L8 $ GND) # !program_counter[4] & !A1L8 & VCC;

--A1L10 is Add0~173 at LCCOMB_X28_Y35_N8
A1L10 = CARRY(program_counter[4] & !A1L8);


--A1L160 is Selector3~22 at LCCOMB_X28_Y35_N22
A1L160 = state.execute_jump & (instruction_register[4]) # !state.execute_jump & state.fetch & A1L9;


--A1L11 is Add0~174 at LCCOMB_X28_Y35_N10
A1L11 = program_counter[5] & !A1L10 # !program_counter[5] & (A1L10 # GND);

--A1L12 is Add0~175 at LCCOMB_X28_Y35_N10
A1L12 = CARRY(!A1L10 # !program_counter[5]);


--A1L159 is Selector2~22 at LCCOMB_X29_Y35_N18
A1L159 = state.execute_jump & (instruction_register[5]) # !state.execute_jump & A1L11 & state.fetch;


--A1L13 is Add0~176 at LCCOMB_X28_Y35_N12
A1L13 = program_counter[6] & (A1L12 $ GND) # !program_counter[6] & !A1L12 & VCC;

--A1L14 is Add0~177 at LCCOMB_X28_Y35_N12
A1L14 = CARRY(program_counter[6] & !A1L12);


--A1L158 is Selector1~22 at LCCOMB_X29_Y35_N14
A1L158 = state.execute_jump & (instruction_register[6]) # !state.execute_jump & A1L13 & (state.fetch);


--A1L15 is Add0~178 at LCCOMB_X28_Y35_N14
A1L15 = A1L14 $ program_counter[7];


--A1L157 is Selector0~22 at LCCOMB_X29_Y35_N30
A1L157 = state.execute_jump & (instruction_register[7]) # !state.execute_jump & A1L15 & state.fetch;


--A1L17 is Add1~392 at LCCOMB_X30_Y31_N0
A1L17 = register_AC[0] & (C1_q_a[0] $ VCC) # !register_AC[0] & C1_q_a[0] & VCC;

--A1L18 is Add1~393 at LCCOMB_X30_Y31_N0
A1L18 = CARRY(register_AC[0] & C1_q_a[0]);


--A1L180 is Selector23~22 at LCCOMB_X31_Y31_N4
A1L180 = state.execute_load & (C1_q_a[0]) # !state.execute_load & state.execute_add & (A1L17);


--A1L122 is register_AC[0]~86 at LCCOMB_X31_Y31_N2
A1L122 = !reset & (state.execute_add # state.execute_load # !state.reset_pc);


--A1L19 is Add1~394 at LCCOMB_X30_Y31_N2
A1L19 = register_AC[1] & (C1_q_a[1] & A1L18 & VCC # !C1_q_a[1] & !A1L18) # !register_AC[1] & (C1_q_a[1] & !A1L18 # !C1_q_a[1] & (A1L18 # GND));

--A1L20 is Add1~395 at LCCOMB_X30_Y31_N2
A1L20 = CARRY(register_AC[1] & !C1_q_a[1] & !A1L18 # !register_AC[1] & (!A1L18 # !C1_q_a[1]));


--A1L179 is Selector22~22 at LCCOMB_X31_Y31_N16
A1L179 = state.execute_load & (C1_q_a[1]) # !state.execute_load & state.execute_add & (A1L19);


--A1L21 is Add1~396 at LCCOMB_X30_Y31_N4
A1L21 = (register_AC[2] $ C1_q_a[2] $ !A1L20) # GND;

--A1L22 is Add1~397 at LCCOMB_X30_Y31_N4
A1L22 = CARRY(register_AC[2] & (C1_q_a[2] # !A1L20) # !register_AC[2] & C1_q_a[2] & !A1L20);


--A1L178 is Selector21~22 at LCCOMB_X31_Y31_N18
A1L178 = state.execute_load & (C1_q_a[2]) # !state.execute_load & state.execute_add & A1L21;


--A1L23 is Add1~398 at LCCOMB_X30_Y31_N6
A1L23 = register_AC[3] & (C1_q_a[3] & A1L22 & VCC # !C1_q_a[3] & !A1L22) # !register_AC[3] & (C1_q_a[3] & !A1L22 # !C1_q_a[3] & (A1L22 # GND));

--A1L24 is Add1~399 at LCCOMB_X30_Y31_N6
A1L24 = CARRY(register_AC[3] & !C1_q_a[3] & !A1L22 # !register_AC[3] & (!A1L22 # !C1_q_a[3]));


--A1L177 is Selector20~22 at LCCOMB_X31_Y31_N24
A1L177 = state.execute_load & (C1_q_a[3]) # !state.execute_load & state.execute_add & A1L23;


--A1L25 is Add1~400 at LCCOMB_X30_Y31_N8
A1L25 = (C1_q_a[4] $ register_AC[4] $ !A1L24) # GND;

--A1L26 is Add1~401 at LCCOMB_X30_Y31_N8
A1L26 = CARRY(C1_q_a[4] & (register_AC[4] # !A1L24) # !C1_q_a[4] & register_AC[4] & !A1L24);


--A1L176 is Selector19~22 at LCCOMB_X31_Y31_N10
A1L176 = state.execute_load & C1_q_a[4] # !state.execute_load & (state.execute_add & A1L25);


--A1L27 is Add1~402 at LCCOMB_X30_Y31_N10
A1L27 = C1_q_a[5] & (register_AC[5] & A1L26 & VCC # !register_AC[5] & !A1L26) # !C1_q_a[5] & (register_AC[5] & !A1L26 # !register_AC[5] & (A1L26 # GND));

--A1L28 is Add1~403 at LCCOMB_X30_Y31_N10
A1L28 = CARRY(C1_q_a[5] & !register_AC[5] & !A1L26 # !C1_q_a[5] & (!A1L26 # !register_AC[5]));


--A1L175 is Selector18~22 at LCCOMB_X31_Y31_N14
A1L175 = state.execute_load & (C1_q_a[5]) # !state.execute_load & state.execute_add & (A1L27);


--A1L29 is Add1~404 at LCCOMB_X30_Y31_N12
A1L29 = (C1_q_a[6] $ register_AC[6] $ !A1L28) # GND;

--A1L30 is Add1~405 at LCCOMB_X30_Y31_N12
A1L30 = CARRY(C1_q_a[6] & (register_AC[6] # !A1L28) # !C1_q_a[6] & register_AC[6] & !A1L28);


--A1L174 is Selector17~22 at LCCOMB_X29_Y31_N26
A1L174 = state.execute_load & C1_q_a[6] # !state.execute_load & (A1L29 & state.execute_add);


--A1L31 is Add1~406 at LCCOMB_X30_Y31_N14
A1L31 = register_AC[7] & (C1_q_a[7] & A1L30 & VCC # !C1_q_a[7] & !A1L30) # !register_AC[7] & (C1_q_a[7] & !A1L30 # !C1_q_a[7] & (A1L30 # GND));

--A1L32 is Add1~407 at LCCOMB_X30_Y31_N14
A1L32 = CARRY(register_AC[7] & !C1_q_a[7] & !A1L30 # !register_AC[7] & (!A1L30 # !C1_q_a[7]));


--A1L173 is Selector16~22 at LCCOMB_X29_Y31_N20
A1L173 = state.execute_load & (C1_q_a[7]) # !state.execute_load & state.execute_add & A1L31;


--A1L33 is Add1~408 at LCCOMB_X30_Y31_N16
A1L33 = (register_AC[8] $ C1_q_a[8] $ !A1L32) # GND;

--A1L34 is Add1~409 at LCCOMB_X30_Y31_N16
A1L34 = CARRY(register_AC[8] & (C1_q_a[8] # !A1L32) # !register_AC[8] & C1_q_a[8] & !A1L32);


--A1L172 is Selector15~22 at LCCOMB_X29_Y31_N8
A1L172 = state.execute_load & (C1_q_a[8]) # !state.execute_load & state.execute_add & A1L33;


--A1L35 is Add1~410 at LCCOMB_X30_Y31_N18
A1L35 = C1_q_a[9] & (register_AC[9] & A1L34 & VCC # !register_AC[9] & !A1L34) # !C1_q_a[9] & (register_AC[9] & !A1L34 # !register_AC[9] & (A1L34 # GND));

--A1L36 is Add1~411 at LCCOMB_X30_Y31_N18
A1L36 = CARRY(C1_q_a[9] & !register_AC[9] & !A1L34 # !C1_q_a[9] & (!A1L34 # !register_AC[9]));


--A1L171 is Selector14~22 at LCCOMB_X29_Y31_N30
A1L171 = state.execute_load & (C1_q_a[9]) # !state.execute_load & state.execute_add & (A1L35);


--A1L37 is Add1~412 at LCCOMB_X30_Y31_N20
A1L37 = (register_AC[10] $ C1_q_a[10] $ !A1L36) # GND;

--A1L38 is Add1~413 at LCCOMB_X30_Y31_N20
A1L38 = CARRY(register_AC[10] & (C1_q_a[10] # !A1L36) # !register_AC[10] & C1_q_a[10] & !A1L36);


--A1L170 is Selector13~22 at LCCOMB_X29_Y31_N4
A1L170 = state.execute_load & (C1_q_a[10]) # !state.execute_load & state.execute_add & (A1L37);


--A1L39 is Add1~414 at LCCOMB_X30_Y31_N22
A1L39 = register_AC[11] & (C1_q_a[11] & A1L38 & VCC # !C1_q_a[11] & !A1L38) # !register_AC[11] & (C1_q_a[11] & !A1L38 # !C1_q_a[11] & (A1L38 # GND));

--A1L40 is Add1~415 at LCCOMB_X30_Y31_N22
A1L40 = CARRY(register_AC[11] & !C1_q_a[11] & !A1L38 # !register_AC[11] & (!A1L38 # !C1_q_a[11]));


--A1L169 is Selector12~22 at LCCOMB_X29_Y31_N12
A1L169 = state.execute_load & (C1_q_a[11]) # !state.execute_load & state.execute_add & (A1L39);


--A1L41 is Add1~416 at LCCOMB_X30_Y31_N24
A1L41 = (register_AC[12] $ C1_q_a[12] $ !A1L40) # GND;

--A1L42 is Add1~417 at LCCOMB_X30_Y31_N24
A1L42 = CARRY(register_AC[12] & (C1_q_a[12] # !A1L40) # !register_AC[12] & C1_q_a[12] & !A1L40);


--A1L168 is Selector11~22 at LCCOMB_X29_Y31_N24
A1L168 = state.execute_load & (C1_q_a[12]) # !state.execute_load & state.execute_add & (A1L41);


--A1L43 is Add1~418 at LCCOMB_X30_Y31_N26
A1L43 = register_AC[13] & (C1_q_a[13] & A1L42 & VCC # !C1_q_a[13] & !A1L42) # !register_AC[13] & (C1_q_a[13] & !A1L42 # !C1_q_a[13] & (A1L42 # GND));

--A1L44 is Add1~419 at LCCOMB_X30_Y31_N26
A1L44 = CARRY(register_AC[13] & !C1_q_a[13] & !A1L42 # !register_AC[13] & (!A1L42 # !C1_q_a[13]));


--A1L167 is Selector10~22 at LCCOMB_X29_Y31_N14
A1L167 = state.execute_load & C1_q_a[13] # !state.execute_load & (A1L43 & state.execute_add);


--A1L45 is Add1~420 at LCCOMB_X30_Y31_N28
A1L45 = (C1_q_a[14] $ register_AC[14] $ !A1L44) # GND;

--A1L46 is Add1~421 at LCCOMB_X30_Y31_N28
A1L46 = CARRY(C1_q_a[14] & (register_AC[14] # !A1L44) # !C1_q_a[14] & register_AC[14] & !A1L44);


--A1L166 is Selector9~22 at LCCOMB_X29_Y31_N28
A1L166 = state.execute_load & (C1_q_a[14]) # !state.execute_load & state.execute_add & (A1L45);


--A1L47 is Add1~422 at LCCOMB_X30_Y31_N30
A1L47 = register_AC[15] $ A1L46 $ C1_q_a[15];


--A1L165 is Selector8~22 at LCCOMB_X31_Y31_N20
A1L165 = state.execute_load & (C1_q_a[15]) # !state.execute_load & state.execute_add & (A1L47);


--memory_write is memory_write at LCFF_X31_Y31_N1
memory_write = DFFEAS(A1L100, GLOBAL(A1L50),  ,  ,  ,  ,  ,  ,  );


--A1L53 is instruction_register[0]~567 at LCCOMB_X31_Y31_N12
A1L53 = state.fetch & !reset;


--instruction_register[8] is instruction_register[8] at LCFF_X28_Y31_N1
instruction_register[8] = DFFEAS(A1L62, GLOBAL(A1L50),  ,  , A1L53,  ,  ,  ,  );


--instruction_register[9] is instruction_register[9] at LCFF_X28_Y31_N27
instruction_register[9] = DFFEAS(A1L64, GLOBAL(A1L50),  ,  , A1L53,  ,  ,  ,  );


--instruction_register[15] is instruction_register[15] at LCFF_X29_Y31_N11
instruction_register[15] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[15],  ,  , VCC);


--instruction_register[14] is instruction_register[14] at LCFF_X29_Y31_N3
instruction_register[14] = DFFEAS(A1L70, GLOBAL(A1L50),  ,  , A1L53,  ,  ,  ,  );


--instruction_register[13] is instruction_register[13] at LCFF_X29_Y31_N23
instruction_register[13] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[13],  ,  , VCC);


--instruction_register[12] is instruction_register[12] at LCFF_X29_Y31_N1
instruction_register[12] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[12],  ,  , VCC);


--A1L201 is state~107 at LCCOMB_X29_Y31_N0
A1L201 = !instruction_register[15] & !instruction_register[13] & !instruction_register[12] & !instruction_register[14];


--instruction_register[11] is instruction_register[11] at LCFF_X29_Y31_N7
instruction_register[11] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[11],  ,  , VCC);


--instruction_register[10] is instruction_register[10] at LCFF_X29_Y31_N17
instruction_register[10] = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L50),  ,  , A1L53, C1_q_a[10],  ,  , VCC);


--A1L202 is state~108 at LCCOMB_X29_Y31_N16
A1L202 = A1L201 & !instruction_register[10] & !instruction_register[11];


--A1L203 is state~109 at LCCOMB_X28_Y31_N2
A1L203 = A1L202 & instruction_register[9] & state.decode & instruction_register[8];


--A1L204 is state~110 at LCCOMB_X28_Y31_N12
A1L204 = A1L202 & !instruction_register[9] & state.decode & instruction_register[8];


--A1L205 is state~111 at LCCOMB_X28_Y31_N14
A1L205 = A1L202 & !instruction_register[9] & state.decode & !instruction_register[8];


--A1L206 is state~112 at LCCOMB_X28_Y31_N28
A1L206 = A1L202 & instruction_register[9] & state.decode & !instruction_register[8];


--A1L198 is state.fetch~46 at LCCOMB_X31_Y31_N6
A1L198 = !state.execute_store & !state.execute_store2;


--A1L181 is Selector25~99 at LCCOMB_X31_Y31_N26
A1L181 = state.decode & (!A1L202) # !state.decode & A1L198 & !state.fetch;


--A1L99 is memory_write~57 at LCCOMB_X31_Y31_N30
A1L99 = !state.execute_store2 & !state.fetch & state.reset_pc;


--A1L100 is memory_write~58 at LCCOMB_X31_Y31_N0
A1L100 = reset & (memory_write) # !reset & (state.execute_store # A1L99 & memory_write);


--clock is clock at PIN_P2
--operation mode is input

clock = INPUT();


--reset is reset at PIN_P1
--operation mode is input

reset = INPUT();


--program_counter_out[0] is program_counter_out[0] at PIN_G13
--operation mode is output

program_counter_out[0] = OUTPUT(program_counter[0]);


--program_counter_out[1] is program_counter_out[1] at PIN_D16
--operation mode is output

program_counter_out[1] = OUTPUT(program_counter[1]);


--program_counter_out[2] is program_counter_out[2] at PIN_C16
--operation mode is output

program_counter_out[2] = OUTPUT(program_counter[2]);


--program_counter_out[3] is program_counter_out[3] at PIN_D15
--operation mode is output

program_counter_out[3] = OUTPUT(program_counter[3]);


--program_counter_out[4] is program_counter_out[4] at PIN_D10
--operation mode is output

program_counter_out[4] = OUTPUT(program_counter[4]);


--program_counter_out[5] is program_counter_out[5] at PIN_E15
--operation mode is output

program_counter_out[5] = OUTPUT(program_counter[5]);


--program_counter_out[6] is program_counter_out[6] at PIN_J11
--operation mode is output

program_counter_out[6] = OUTPUT(program_counter[6]);


--program_counter_out[7] is program_counter_out[7] at PIN_B11
--operation mode is output

program_counter_out[7] = OUTPUT(program_counter[7]);


--register_AC_out[0] is register_AC_out[0] at PIN_B15
--operation mode is output

register_AC_out[0] = OUTPUT(register_AC[0]);


--register_AC_out[1] is register_AC_out[1] at PIN_G14
--operation mode is output

register_AC_out[1] = OUTPUT(register_AC[1]);


--register_AC_out[2] is register_AC_out[2] at PIN_A17
--operation mode is output

register_AC_out[2] = OUTPUT(register_AC[2]);


--register_AC_out[3] is register_AC_out[3] at PIN_J7
--operation mode is output

register_AC_out[3] = OUTPUT(register_AC[3]);


--register_AC_out[4] is register_AC_out[4] at PIN_F14
--operation mode is output

register_AC_out[4] = OUTPUT(register_AC[4]);


--register_AC_out[5] is register_AC_out[5] at PIN_A14
--operation mode is output

register_AC_out[5] = OUTPUT(register_AC[5]);


--register_AC_out[6] is register_AC_out[6] at PIN_C10
--operation mode is output

register_AC_out[6] = OUTPUT(register_AC[6]);


--register_AC_out[7] is register_AC_out[7] at PIN_G16
--operation mode is output

register_AC_out[7] = OUTPUT(register_AC[7]);


--register_AC_out[8] is register_AC_out[8] at PIN_J5
--operation mode is output

register_AC_out[8] = OUTPUT(register_AC[8]);


--register_AC_out[9] is register_AC_out[9] at PIN_G11
--operation mode is output

register_AC_out[9] = OUTPUT(register_AC[9]);


--register_AC_out[10] is register_AC_out[10] at PIN_K5
--operation mode is output

register_AC_out[10] = OUTPUT(register_AC[10]);


--register_AC_out[11] is register_AC_out[11] at PIN_A8
--operation mode is output

register_AC_out[11] = OUTPUT(register_AC[11]);


--register_AC_out[12] is register_AC_out[12] at PIN_A10
--operation mode is output

register_AC_out[12] = OUTPUT(register_AC[12]);


--register_AC_out[13] is register_AC_out[13] at PIN_D11
--operation mode is output

register_AC_out[13] = OUTPUT(register_AC[13]);


--register_AC_out[14] is register_AC_out[14] at PIN_H6
--operation mode is output

register_AC_out[14] = OUTPUT(register_AC[14]);


--register_AC_out[15] is register_AC_out[15] at PIN_C15
--operation mode is output

register_AC_out[15] = OUTPUT(register_AC[15]);


--memory_data_register_out[0] is memory_data_register_out[0] at PIN_F12
--operation mode is output

memory_data_register_out[0] = OUTPUT(C1_q_a[0]);


--memory_data_register_out[1] is memory_data_register_out[1] at PIN_D14
--operation mode is output

memory_data_register_out[1] = OUTPUT(C1_q_a[1]);


--memory_data_register_out[2] is memory_data_register_out[2] at PIN_G12
--operation mode is output

memory_data_register_out[2] = OUTPUT(C1_q_a[2]);


--memory_data_register_out[3] is memory_data_register_out[3] at PIN_E12
--operation mode is output

memory_data_register_out[3] = OUTPUT(C1_q_a[3]);


--memory_data_register_out[4] is memory_data_register_out[4] at PIN_B14
--operation mode is output

memory_data_register_out[4] = OUTPUT(C1_q_a[4]);


--memory_data_register_out[5] is memory_data_register_out[5] at PIN_J13
--operation mode is output

memory_data_register_out[5] = OUTPUT(C1_q_a[5]);


--memory_data_register_out[6] is memory_data_register_out[6] at PIN_D12
--operation mode is output

memory_data_register_out[6] = OUTPUT(C1_q_a[6]);


--memory_data_register_out[7] is memory_data_register_out[7] at PIN_B12
--operation mode is output

memory_data_register_out[7] = OUTPUT(C1_q_a[7]);


--memory_data_register_out[8] is memory_data_register_out[8] at PIN_J10
--operation mode is output

memory_data_register_out[8] = OUTPUT(C1_q_a[8]);


--memory_data_register_out[9] is memory_data_register_out[9] at PIN_C12
--operation mode is output

memory_data_register_out[9] = OUTPUT(C1_q_a[9]);


--memory_data_register_out[10] is memory_data_register_out[10] at PIN_C11
--operation mode is output

memory_data_register_out[10] = OUTPUT(C1_q_a[10]);


--memory_data_register_out[11] is memory_data_register_out[11] at PIN_F13
--operation mode is output

memory_data_register_out[11] = OUTPUT(C1_q_a[11]);


--memory_data_register_out[12] is memory_data_register_out[12] at PIN_B16
--operation mode is output

memory_data_register_out[12] = OUTPUT(C1_q_a[12]);


--memory_data_register_out[13] is memory_data_register_out[13] at PIN_A9
--operation mode is output

memory_data_register_out[13] = OUTPUT(C1_q_a[13]);


--memory_data_register_out[14] is memory_data_register_out[14] at PIN_J8
--operation mode is output

memory_data_register_out[14] = OUTPUT(C1_q_a[14]);


--memory_data_register_out[15] is memory_data_register_out[15] at PIN_J14
--operation mode is output

memory_data_register_out[15] = OUTPUT(C1_q_a[15]);


--memory_address_register_out[0] is memory_address_register_out[0] at PIN_B9
--operation mode is output

memory_address_register_out[0] = OUTPUT(A1L189);


--memory_address_register_out[1] is memory_address_register_out[1] at PIN_F11
--operation mode is output

memory_address_register_out[1] = OUTPUT(A1L188);


--memory_address_register_out[2] is memory_address_register_out[2] at PIN_E10
--operation mode is output

memory_address_register_out[2] = OUTPUT(A1L187);


--memory_address_register_out[3] is memory_address_register_out[3] at PIN_H11
--operation mode is output

memory_address_register_out[3] = OUTPUT(A1L186);


--memory_address_register_out[4] is memory_address_register_out[4] at PIN_AD11
--operation mode is output

memory_address_register_out[4] = OUTPUT(A1L185);


--memory_address_register_out[5] is memory_address_register_out[5] at PIN_C9
--operation mode is output

memory_address_register_out[5] = OUTPUT(A1L184);


--memory_address_register_out[6] is memory_address_register_out[6] at PIN_B10
--operation mode is output

memory_address_register_out[6] = OUTPUT(A1L183);


--memory_address_register_out[7] is memory_address_register_out[7] at PIN_H12
--operation mode is output

memory_address_register_out[7] = OUTPUT(A1L182);





--A1L50 is clock~clkctrl at CLKCTRL_G3
A1L50 = cycloneii_clkctrl(.INCLK[0] = clock) WITH (clock_type = "Global Clock");


--A1L156 is reset~clkctrl at CLKCTRL_G1
A1L156 = cycloneii_clkctrl(.INCLK[0] = reset) WITH (clock_type = "Global Clock");


--A1L62 is instruction_register[8]~feeder at LCCOMB_X28_Y31_N0
A1L62 = C1_q_a[8];


--A1L64 is instruction_register[9]~feeder at LCCOMB_X28_Y31_N26
A1L64 = C1_q_a[9];


--A1L70 is instruction_register[14]~feeder at LCCOMB_X29_Y31_N2
A1L70 = C1_q_a[14];


--A1L200 is state.reset_pc~feeder at LCCOMB_X32_Y31_N30
A1L200 = VCC;


